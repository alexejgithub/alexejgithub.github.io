{"version":3,"sources":["components/titleQuery.jsx","components/authorQuery.jsx","components/spinner.jsx","index.js"],"names":["TitleQuery","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateTitle","e","setState","titleKeyword","target","value","createTitle","preventDefault","state","_this2","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","keywords","map","key","uuidv1","aria-label","onClick","onDelete","aria-hidden","React","Component","AuthorQuery","updateAuthor","authorName","createAuthor","Spinner","Fragment","role","App","handleDeleteKeyword","keyword","prevState","filter","el","handleDeleteAuthor","author","authors","searchAuthors","createVenuesDir","venues","titleHits","forEach","title","venue","info","undefined","toConsumableArray","entries","sort","b","venuesDict","filterAuthors","titleAuthorMap","size","mapCopy","Map","hit","delete","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","coAuthorMap","Symbol","iterator","next","done","_ref3","slicedToArray","err","return","searchTitle","isLoading","hitsAmountTitles","newHits","newTitleHits","requests","Promise","resolve","fetch","concat","then","response","json","data","result","hits","all","createTitleAuthors","Array","isArray","preCount","has","get","set","createCoAuthorSet","authorSetTMP","Set","endULR","url","split","slice","join","promise","method","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","headers","pair","res","add","push","authorSet","promises","text","str","window","DOMParser","parseFromString","getElementsByTagName","coAuthor","count","getAttribute","name","childNodes","nodeValue","prevCount","searchNewAuthor","newAuthor","authorCopy","authorHits","hitsAmountAuthors","newAuthorArray","handleCreateTitle","newTitle","handleCreateAuthor","onDeleteFoundAuthor","cleandedAuthors","elm","onDeleteCoAuthor","coAuthorCopy","redoTitleQuery","removeVenue","_this$state","authorQuery_AuthorQuery","titleQuery_TitleQuery","spinner","authArray","rel","href","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.605ef1a5.chunk.js","sourcesContent":["import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\n\nexport default class TitleQuery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleKeyword: \"\"\n    };\n  }\n\n  updateTitle = e => {\n    this.setState({ titleKeyword: e.target.value });\n  };\n  createTitle = e => {\n    e.preventDefault();\n    if (this.state.titleKeyword !== \"\")\n      this.props.createTitle(this.state.titleKeyword);\n    this.setState({ titleKeyword: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"container wb\">\n        <div className=\"row\">\n          <h3>Keyword Query</h3>\n\n          <form onSubmit={this.createTitle}>\n            <div className=\"col-lg-12 input-group\">\n              <input\n                type=\"text\"\n                className=\"center-block\"\n                placeholder=\"Insert here...\"\n                value={this.state.titleKeyword}\n                onChange={this.updateTitle}\n              />\n              <button className=\"btn btn-dark center-block\">Add</button>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <ul className=\"list-group\">\n              {this.props.keywords.map(titleKeyword => {\n                return (\n                  <li key={uuidv1()} className=\"hoverHighlight list-group-item\">\n                    {titleKeyword}\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      aria-label=\"Close\"\n                      onClick={e => this.props.onDelete(titleKeyword)}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class AuthorQuery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authorName: \"\"\n    };\n  }\n\n  updateAuthor = e => {\n    this.setState({ authorName: e.target.value });\n  };\n  createAuthor = e => {\n    e.preventDefault();\n    if (this.state.authorName !== \"\")\n      this.props.createAuthor(this.state.authorName);\n    this.setState({ authorName: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"container wb\">\n        <div className=\"row\">\n          <h3>Author Query</h3>\n\n          <form onSubmit={this.createAuthor}>\n            <div className=\"col-lg-12 input-group\">\n              <input\n                type=\"text\"\n                className=\"center-block\"\n                placeholder=\"Insert here...\"\n                value={this.state.authorName}\n                onChange={this.updateAuthor}\n              />\n              <button className=\"btn btn-dark center-block\">Add</button>\n            </div>\n          </form>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Spinner = () => {\n    return (\n      <>\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </>\n    );\n  }\n  \n  export default Spinner;\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TitleQuery from \"./components/titleQuery\";\nimport AuthorQuery from \"./components/authorQuery\";\nimport Spinner from \"./components/spinner\";\n\n// ========================================\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keywords: [],\n      authors: [],\n      titleHits: [],\n      hitsAmountTitles: 0,\n      authorSet: new Set(),\n      coAuthorMap: new Map(),\n      titleAuthorMap: new Map(),\n      venuesDict: [],\n      isLoading: false\n    };\n  }\n\n  handleDeleteKeyword = keyword => {\n    this.setState(prevState => ({\n      keywords: prevState.keywords.filter(el => el !== keyword)\n    }));\n  };\n\n  handleDeleteAuthor = author => {\n    this.setState(\n      prevState => ({\n        authors: prevState.authors.filter(el => el !== author)\n      }),\n      () => {\n        this.searchAuthors();\n      }\n    );\n  };\n\n  createVenuesDir = () =>{\n    let venues = {}\n    this.state.titleHits.forEach(title => {\n      let venue = title.info.venue\n      if( venues[venue] === undefined)\n        venues[venue]  = 1\n      else{\n        venues[venue]  += 1\n      }\n    });\n    venues = \n      [...Object.entries(venues)].sort((a, b) => b[1] - a[1])\n    this.setState({\n      venuesDict: venues\n    });\n\n  }\n\n  filterAuthors = () => {\n    if (this.state.titleAuthorMap.size > 0) {\n      let mapCopy = new Map(this.state.titleAuthorMap);\n\n      this.state.authors.forEach(hit => {\n        hit.authors.forEach(author=> {\n          mapCopy.delete(author.info.author);\n        })\n      });\n\n      for (const [key] of this.state.coAuthorMap.entries()) {\n        mapCopy.delete(key);\n      }\n      this.setState({\n        titleAuthorMap: mapCopy\n      });\n    }\n  };\n\n  searchTitle = e => {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      titleHits: []\n    });\n    this.setState({\n      hitsAmountTitles: 0\n    });\n\n    let newHits = 0;\n    let newTitleHits = [];\n\n    let requests = this.state.keywords.map(keywords => {\n      return new Promise(resolve => {\n        fetch(\n          `https://cors-anywhere.herokuapp.com/https://dblp.org/search/publ/api?q=${keywords}&h=1000&format=json` // `/search/author?xauthor=${authorString}`\n        ).then(response => {\n          response\n            .json()\n            .then(data => {\n              if (data.result.hits.hit) {\n                newHits = newHits + data.result.hits[\"@total\"] * 1;\n                newTitleHits = [...newTitleHits, ...data.result.hits.hit];\n              }\n            })\n            .then(() => {\n              resolve();\n            });\n        });\n      });\n    });\n\n    Promise.all(requests).then(() => {\n\n      this.setState({\n        isLoading: false\n      });\n      this.setState({\n        hitsAmountTitles: newHits\n      });\n      this.setState({\n        titleHits: newTitleHits\n      });\n      this.createTitleAuthors();\n      this.createVenuesDir()\n    });\n  };\n\n  createTitleAuthors = () => {\n    let titleAuthorMap = new Map();\n    this.setState({\n      isLoading: true\n    });\n    this.state.titleHits.map(hit => {\n      if (hit.info.authors !== undefined) {\n        if (Array.isArray(hit.info.authors.author)) {\n          hit.info.authors.author.forEach(author => {\n            let preCount = titleAuthorMap.has(author)\n              ? titleAuthorMap.get(author)\n              : 0;\n            titleAuthorMap.set(author, 1 + preCount);\n          });\n        } else {\n          let preCount = titleAuthorMap.has(hit.info.authors.author)\n            ? titleAuthorMap.get(hit.info.authors.author)\n            : 0;\n          titleAuthorMap.set(hit.info.authors.author, 1 + preCount);\n        }\n      }\n      return true;\n    });\n    titleAuthorMap = new Map(\n      [...titleAuthorMap.entries()].sort((a, b) => b[1] - a[1])\n    );\n\n    this.setState({\n      titleAuthorMap: titleAuthorMap\n    });\n    this.setState({\n      isLoading: false\n    });\n  };\n\n  createCoAuthorSet = () => {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      coAuthorMap: []\n    });\n\n    const { authors } = this.state;\n\n    let authorSetTMP = new Set();\n    let coAuthorMap = new Map();\n    let requests = [];\n\n    authors.forEach(hit => {\n      hit.authors.forEach(author => {\n        let lastfewLines = author.info.url.split(\"/\").slice(-3);\n        let endULR = lastfewLines.join(\"/\");\n        const promise = fetch(\n          `https://cors-anywhere.herokuapp.com/https://dblp.uni-trier.de/rec/${endULR}`,\n          {\n            method: \"HEAD\"\n          }\n        ).then(response => {\n          for (var pair of response.headers.entries()) {\n            if (pair[0] === \"x-final-url\") {\n              let res = pair[1].split(\"/\").slice(-2);\n              authorSetTMP.add(res.join(\"/\"));\n            }\n          }\n        });\n        requests.push(promise);\n      });\n    });\n\n    this.setState({\n      authorSet: authorSetTMP\n    });\n    Promise.all(requests).then(() => {\n      let promises = [];\n      authorSetTMP.forEach(author => {\n        const promise = fetch(`https://dblp.uni-trier.de/pers/xc/${author}.xml`)\n          .then(response => response.text())\n          .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n          .then(data => {\n            // console.log();\n            [...data.getElementsByTagName(\"author\")].forEach(coAuthor => {\n              let count = coAuthor.getAttribute(\"count\");\n              let name = coAuthor.childNodes[0].nodeValue;\n              if (count > 2) {\n                let prevCount = coAuthorMap.has(name)\n                  ? coAuthorMap.get(name)\n                  : 0;\n                coAuthorMap.set(name, count * 1 + prevCount);\n              }\n            });\n          });\n\n        promises.push(promise);\n      });\n\n      Promise.all(promises).then(() => {\n        coAuthorMap = new Map(\n          [...coAuthorMap.entries()].sort((a, b) => b[1] - a[1])\n        );\n        this.setState({\n          isLoading: false\n        });\n        this.setState({\n          coAuthorMap: coAuthorMap\n        });\n      });\n    });\n  };\n  searchNewAuthor = newAuthor => {\n    this.setState({\n      isLoading: true\n    });\n    let authorCopy = [...this.state.authors];\n    let authors = [];\n    let requests = () => {\n      return new Promise(resolve => {\n        fetch(\n          `https://cors-anywhere.herokuapp.com/https://dblp.org/search/author/api?q=${newAuthor}&h=1000&format=json` // `/search/author?xauthor=${authorString}`\n        ).then(response => {\n          response\n            .json()\n            .then(data => {\n              if (data.result.hits.hit) {\n                authors = [...authors, ...data.result.hits.hit];\n              }\n            })\n            .then(() => {\n              resolve();\n            });\n        });\n      });\n    };\n    requests().then(() => {\n      authorCopy = [...authorCopy, { newAuthor, authors }];\n\n      this.setState({\n        isLoading: false\n      });\n      this.setState({\n        authors: authorCopy\n      });\n    });\n  };\n  searchAuthors = e => {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      authorHits: []\n    });\n    this.setState({\n      hitsAmountAuthors: 0\n    });\n    // let authorCopy = [...this.state.authors]\n    let newHits = 0;\n    let newAuthorArray = [];\n    let requests = this.state.authors.map(author => {\n      return new Promise(resolve => {\n        fetch(\n          `https://cors-anywhere.herokuapp.com/https://dblp.org/search/author/api?q=${author}&h=1000&format=json` // `/search/author?xauthor=${authorString}`\n        ).then(response => {\n          response\n            .json()\n            .then(data => {\n              if (data.result.hits.hit) {\n                newHits = newHits + data.result.hits[\"@total\"] * 1;\n                newAuthorArray = [...newAuthorArray, ...data.result.hits.hit];\n              }\n            })\n            .then(() => {\n              resolve();\n            });\n        });\n      });\n    });\n\n    Promise.all(requests).then(() => {\n\n      this.setState({\n        isLoading: false\n      });\n      this.setState({\n        hitsAmountAuthors: newHits\n      });\n      this.setState({\n        authorHits: newAuthorArray\n      });\n    });\n  };\n\n  handleCreateTitle = newTitle => {\n    this.setState({\n      keywords: [...this.state.keywords, newTitle]\n    });\n  };\n\n  handleCreateAuthor = newAuthor => {\n    this.searchNewAuthor(newAuthor);\n    //   this.setState({\n    //     authors: [...this.state.authors, newAuthor]\n    //   }, () => {\n    //     this.searchNewAuthor(newAuthor);\n    // });\n  };\n\n  onDeleteFoundAuthor = author => {\n    this.setState(prevState => ({\n      authors: prevState.authors.map(el => {\n        let cleandedAuthors = el.authors.filter(\n          elm => elm.info.author !== author\n        );\n        el.authors = cleandedAuthors;\n        return el;\n      })\n    }));\n  };\n\n  onDeleteCoAuthor = author => {\n    let coAuthorCopy = new Map(this.state.coAuthorMap);\n    coAuthorCopy.delete(author);\n    this.setState({\n      coAuthorMap: coAuthorCopy\n    });\n  };\n  redoTitleQuery  = () => {\n    this.createTitleAuthors()\n    this.createVenuesDir()\n  }\n  removeVenue = (venue) => {\n    const { titleHits } = this.state;\n    if(venue === \"undefined\"){\n      this.setState({\n        titleHits : titleHits.filter(title => title.info.venue !== undefined)\n      },() => this.redoTitleQuery())\n  \n    }else{\n      this.setState({\n        titleHits : titleHits.filter(title => title.info.venue !== venue)\n      },() => this.redoTitleQuery())\n  \n    }\n  }\n\n  render() {\n    const { titleAuthorMap, authors, coAuthorMap, venuesDict } = this.state;\n    return (\n      <div>\n        <h2 className=\"text-center\"> Reviewer Finder </h2>{\" \"}\n        <div className=\"container\">\n          <div className=\"row mt-3\">\n           \n            <div className=\"col-sm\">\n              <AuthorQuery\n                authors={this.state.authors}\n                onDelete={this.handleDeleteAuthor}\n                createAuthor={this.handleCreateAuthor}\n              />{\" \"}\n            </div>{\" \"}\n            <div className=\"col-sm\">\n              <TitleQuery\n                keywords={this.state.keywords}\n                onDelete={this.handleDeleteKeyword}\n                createTitle={this.handleCreateTitle}\n              />{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3\">\n          <div className=\"col-sm\">\n          </div>{\" \"}\n\n            <div className=\"col-sm\">\n              {\" \"}\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.searchTitle}\n              >\n                Search Title{\" \"}\n              </button>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3 justify-content-center\">\n            {\" \"}\n            {this.state.isLoading && <Spinner />}{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3 \">\n            <div className=\"col-sm\">\n              <ul className=\"list-group scrollList\">\n                {\" \"}\n                {authors.map(hit =>\n                  hit.authors.map(authArray => (\n                    <li\n                      className=\"hoverHighlight list-group-item\"\n                      key={authArray.url}\n                    >\n                      {authArray.info.author}\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={e =>\n                          this.onDeleteFoundAuthor(authArray.info.author)\n                        }\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </li>\n                  ))\n                )}{\" \"}\n              </ul>{\" \"}\n            </div>{\" \"}\n            <div className=\"col-sm\">\n            Venues:\n            <ul className=\"list-group scrollList\">\n                {\" \"}\n                {venuesDict.map(venue =>\n                    <li\n                      className=\"hoverHighlight list-group-item\"\n                      key={venue[0]}\n                    >\n                      {venue[0]}: {venue[1]}\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={e => this.removeVenue(venue[0])}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </li>\n                  )\n                }{\" \"}\n              </ul>{\" \"}\n            </div>{\" \"}\n\n\n          </div>{\" \"}\n          <div className=\"row mt-3\">\n          <div className=\"col-sm\">\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.createCoAuthorSet}\n              >\n                Find Co-Authors{\" \"}\n              </button>{\" \"}\n              <br />\n              <div className=\"col-sm mt-3\">\n                <ul className=\"list-group scrollList\">\n                  {\" \"}\n                  {[...coAuthorMap].map(hit => (\n                    <li className=\"hoverHighlight list-group-item\" key={hit}>\n                      {hit[0]}: {hit[1]}\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={e => this.onDeleteCoAuthor(hit[0])}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </li>\n                  ))}{\" \"}\n                </ul>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n            <div className=\"col-sm\">\n              {\" \"}\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.filterAuthors}\n              >\n                Filter Authors{\" \"}\n              </button>{\" \"}\n              <div className=\"col-sm mt-3\">\n                <ul className=\"list-group scrollList\">\n                  {\" \"}\n                  {[...titleAuthorMap].map(hit => (\n                    <li className=\"hoverHighlight list-group-item\" key={hit}>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href= {`https://dblp.org/search/author?q=${hit[0]}`} > {hit[0]} {hit[1]}</a>\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={e => this.onDeleteCoAuthor(hit[0])}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </li>\n                  ))}{\" \"}\n                </ul>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n\n  \n\n          </div>{\" \"}\n        </div>{\" \"}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"reactContainer\"));\n"],"sourceRoot":""}