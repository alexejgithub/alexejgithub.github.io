{"version":3,"sources":["components/titleQuery.jsx","components/authorQuery.jsx","components/spinner.jsx","index.js"],"names":["TitleQuery","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateTitle","e","setState","titleKeyword","target","value","createTitle","preventDefault","state","_this2","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","keywords","map","key","uuidv1","aria-label","onClick","onDelete","aria-hidden","React","Component","AuthorQuery","updateAuthor","authorName","createAuthor","authors","Spinner","Fragment","role","App","handleDeleteKeyword","keyword","prevState","filter","el","handleDeleteAuthor","author","filterAuthors","titleAuthorMap","size","mapCopy","Map","authorHits","forEach","delete","info","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","coAuthorMap","entries","Symbol","iterator","next","done","_ref3","slicedToArray","err","return","searchTitle","isLoading","keywordString","join","titleHits","hitsAmountTitles","fetch","concat","then","response","json","data","result","hits","hit","createTitleAuthors","Array","isArray","preCount","has","get","set","toConsumableArray","sort","b","createCoAuthorSet","authorSetTMP","Set","requests","Promise","resolve","url","res","split","slice","add","authorSet","all","promises","promise","text","str","window","DOMParser","parseFromString","getElementsByTagName","coAuthor","count","getAttribute","name","childNodes","nodeValue","prevCount","push","searchAuthors","hitsAmountAuthors","newHits","newAuthorArray","console","log","handleCreateTitle","newTitle","handleCreateAuthor","newAuthor","onDeleteFoundAuthor","onDeleteCoAuthor","coAuthorCopy","_this$state","titleQuery_TitleQuery","authorQuery_AuthorQuery","spinner","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.58f01376.chunk.js","sourcesContent":["import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\n\nexport default class TitleQuery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleKeyword: \"\"\n    };\n  }\n\n  updateTitle = e => {\n    this.setState({ titleKeyword: e.target.value });\n  };\n  createTitle = e => {\n    e.preventDefault();\n    if (this.state.titleKeyword !== \"\")\n      this.props.createTitle(this.state.titleKeyword);\n    this.setState({ titleKeyword: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"container wb\">\n        <div className=\"row\">\n          <h3>Title Query</h3>\n\n          <form onSubmit={this.createTitle}>\n            <div className=\"col-lg-12 input-group\">\n              <input\n                type=\"text\"\n                className=\"center-block\"\n                placeholder=\"Insert here...\"\n                value={this.state.titleKeyword}\n                onChange={this.updateTitle}\n              />\n              <button className=\"btn btn-dark center-block\">Add</button>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <ul className=\"list-group\">\n              {this.props.keywords.map(titleKeyword => {\n                return (\n                  <li key={uuidv1()} className=\"hoverHighlight list-group-item\">\n                    {titleKeyword}\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      aria-label=\"Close\"\n                      onClick={e => this.props.onDelete(titleKeyword)}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport uuidv1 from \"uuid/v1\";\n\nexport default class AuthorQuery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authorName: \"\"\n    };\n  }\n\n  updateAuthor = e => {\n    this.setState({ authorName: e.target.value });\n  };\n  createAuthor = e => {\n    e.preventDefault();\n    if (this.state.authorName !== \"\")\n      this.props.createAuthor(this.state.authorName);\n    this.setState({ authorName: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"container wb\">\n        <div className=\"row\">\n          <h3>Author Query</h3>\n\n          <form onSubmit={this.createAuthor}>\n            <div className=\"col-lg-12 input-group\">\n              <input\n                type=\"text\"\n                className=\"center-block\"\n                placeholder=\"Insert here...\"\n                value={this.state.authorName}\n                onChange={this.updateAuthor}\n              />\n              <button className=\"btn btn-dark center-block\">Add</button>\n            </div>\n          </form>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <ul className=\"list-group\">\n              {this.props.authors.map(authorName => {\n                return (\n                  <li key={uuidv1()} className=\"hoverHighlight list-group-item\">\n                    {authorName}\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      aria-label=\"Close\"\n                      onClick={e => this.props.onDelete( authorName )}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Spinner = () => {\n    return (\n      <>\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </>\n    );\n  }\n  \n  export default Spinner;\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TitleQuery from \"./components/titleQuery\";\nimport AuthorQuery from \"./components/authorQuery\";\nimport Spinner from \"./components/spinner\";\n\n// ========================================\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keywords: [],\n      authors: [],\n      titleHits: [],\n      authorHits: [],\n      hitsAmountTitles: 0,\n      hitsAmountAuthors: 0,\n      authorSet: new Set(),\n      coAuthorMap: new Map(),\n      titleAuthorMap: new Map(),\n      isLoading: false\n    };\n  }\n\n  handleDeleteKeyword = keyword => {\n    this.setState(prevState => ({\n      keywords: prevState.keywords.filter(el => el !== keyword)\n    }));\n  };\n\n  handleDeleteAuthor = author => {\n    this.setState(prevState => ({\n      authors: prevState.authors.filter(el => el !== author)\n    }));\n  };\n\n  filterAuthors = () => {\n    if(this.state.titleAuthorMap.size >0){\n      let mapCopy = new Map(this.state.titleAuthorMap)\n      this.state.authorHits.forEach(author => {\n        mapCopy.delete(author.info.author)\n      });\n  \n      for (const [key,] of this.state.coAuthorMap.entries()) {\n        mapCopy.delete(key)\n      }\n      this.setState({\n        titleAuthorMap : mapCopy\n      })\n    }\n  };\n\n\n  searchTitle = e => {\n    this.setState({\n      isLoading: true\n    });\n    let keywordString = this.state.keywords.join(\"|\");\n\n    this.setState({\n      titleHits: []\n    });\n    this.setState({\n      hitsAmountTitles: 0\n    });\n    fetch(\n      `https://dblp.org/search/publ/api?q=${keywordString}&h=1000&format=json`\n    )\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          isLoading: false\n        });\n        this.setState({\n          hitsAmountTitles: data.result.hits[\"@total\"]\n        });\n        if (data.result.hits[\"@total\"] > 0) {\n          this.setState({\n            titleHits: data.result.hits.hit\n          });\n          this.createTitleAuthors()\n        }\n      });\n  };\n\n  createTitleAuthors = () => {\n    let titleAuthorMap = new Map();\n    this.setState({\n      isLoading: true\n    });\n    this.state.titleHits.map(hit => {\n      if (hit.info.authors !== undefined) {\n        if (Array.isArray(hit.info.authors.author)) {\n          hit.info.authors.author.forEach(author => {\n            let preCount = titleAuthorMap.has(author)\n              ? titleAuthorMap.get(author)\n              : 0;\n            titleAuthorMap.set(author, 1 + preCount);\n          });\n        } else {\n          let preCount = titleAuthorMap.has(hit.info.authors.author)\n            ? titleAuthorMap.get(hit.info.authors.author)\n            : 0;\n          titleAuthorMap.set(hit.info.authors.author, 1 + preCount);\n        }\n      }\n      return true;\n    });\n    titleAuthorMap = new Map(\n      [...titleAuthorMap.entries()].sort((a, b) => b[1] - a[1])\n    );\n\n    this.setState({\n      titleAuthorMap: titleAuthorMap\n    });\n    this.setState({\n      isLoading: false\n    });\n  };\n  createCoAuthorSet = () => {\n    this.setState({\n      isLoading: true\n    });\n\n    const { authorHits } = this.state;\n\n    let authorSetTMP = new Set();\n    let coAuthorMap = new Map();\n\n    let requests = authorHits.map(author => {\n      return new Promise(resolve => {\n        fetch(\n          `${author.info.url}` // `/search/author?xauthor=${authorString}`\n        ).then(response => {\n          let res = response.url.split(\"/\").slice(-2);\n          authorSetTMP.add(res.join(\"/\"));\n          resolve();\n        });\n      });\n    });\n\n    this.setState({\n      authorSet: authorSetTMP\n    });\n    Promise.all(requests).then(() => {\n      let promises = [];\n      authorSetTMP.forEach(author => {\n        const promise = fetch(`https://dblp.uni-trier.de/pers/xc/${author}.xml`)\n          .then(response => response.text())\n          .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n          .then(data => {\n            // console.log();\n            [...data.getElementsByTagName(\"author\")].forEach(coAuthor => {\n              let count = coAuthor.getAttribute(\"count\");\n              let name = coAuthor.childNodes[0].nodeValue;\n              if (count > 2) {\n                let prevCount = coAuthorMap.has(name)\n                  ? coAuthorMap.get(name)\n                  : 0;\n                coAuthorMap.set(name, count * 1 + prevCount);\n              }\n            });\n          });\n\n        promises.push(promise);\n      });\n\n      Promise.all(promises).then(() => {\n        coAuthorMap = new Map(\n          [...coAuthorMap.entries()].sort((a, b) => b[1] - a[1])\n        );\n        this.setState({\n          isLoading: false\n        });\n        this.setState({\n          coAuthorMap: coAuthorMap\n        });\n      });\n    });\n  };\n\n  searchAuthors = e => {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      authorHits: []\n    });\n    this.setState({\n      hitsAmountAuthors: 0\n    });\n    // let authorCopy = [...this.state.authors]\n    let newHits = 0;\n    let newAuthorArray = [];\n    let requests = this.state.authors.map(author => {\n      return new Promise(resolve => {\n        fetch(\n          `https://dblp.org/search/author/api?q=${author}&h=1000&format=json` // `/search/author?xauthor=${authorString}`\n        ).then(response => {\n          response\n            .json()\n            .then(data => {\n              if (data.result.hits.hit) {\n                newHits = newHits + data.result.hits[\"@total\"] * 1;\n                newAuthorArray = [...newAuthorArray, ...data.result.hits.hit];\n              }\n            })\n            .then(() => {\n              resolve();\n            });\n        });\n      });\n    });\n\n    Promise.all(requests).then(() => {\n      console.log(\"done\");\n\n      this.setState({\n        isLoading: false\n      });\n      this.setState({\n        hitsAmountAuthors: newHits\n      });\n      this.setState({\n        authorHits: newAuthorArray\n      });\n    });\n  };\n\n  handleCreateTitle = newTitle => {\n    this.setState({\n      keywords: [...this.state.keywords, newTitle]\n    });\n  };\n\n  handleCreateAuthor = newAuthor => {\n    this.setState({\n      authors: [...this.state.authors, newAuthor]\n    });\n  };\n\n  onDeleteFoundAuthor = author => {\n    this.setState(prevState => ({\n      authorHits: prevState.authorHits.filter(el => el.info.author !== author)\n    }));\n  };\n\n  onDeleteCoAuthor = author => {\n    let coAuthorCopy = new Map(this.state.coAuthorMap);\n    coAuthorCopy.delete(author);\n    this.setState({\n      coAuthorMap: coAuthorCopy\n    });\n  };\n\n  render() {\n    const { titleAuthorMap, authorHits, coAuthorMap } = this.state;\n    return (\n      <div>\n        <h2 className=\"text-center\"> Reviewer Finder </h2>{\" \"}\n        <div className=\"container\">\n          <div className=\"row mt-3\">\n            <div className=\"col-sm\">\n              <TitleQuery\n                keywords={this.state.keywords}\n                onDelete={this.handleDeleteKeyword}\n                createTitle={this.handleCreateTitle}\n              />{\" \"}\n            </div>{\" \"}\n            <div className=\"col-sm\">\n              <AuthorQuery\n                authors={this.state.authors}\n                onDelete={this.handleDeleteAuthor}\n                createAuthor={this.handleCreateAuthor}\n              />{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3\">\n            <div className=\"col-sm\">\n              {\" \"}\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.searchTitle}\n              >\n                Search Title{\" \"}\n              </button>{\" \"}\n            </div>{\" \"}\n            <div className=\"col-sm\">\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.searchAuthors}\n              >\n                Search Author{\" \"}\n              </button>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3 justify-content-center\">\n            {\" \"}\n            {this.state.isLoading && <Spinner />}{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3 \">\n            <div className=\"col-sm\">\n              Title hits: {this.state.hitsAmountTitles} <br />\n            </div>{\" \"}\n            <div className=\"col-sm\">\n              Author hits: {this.state.hitsAmountAuthors} <br />\n              <ul className=\"list-group\">\n                {\" \"}\n                {authorHits.slice(0, 20).map(hit => (\n                  <li className=\"hoverHighlight list-group-item\" key={hit.url}>\n                    {hit.info.author}\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      aria-label=\"Close\"\n                      onClick={e => this.onDeleteFoundAuthor(hit.info.author)}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </li>\n                ))}{\" \"}\n              </ul>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"row mt-3\">\n            <div className=\"col-sm\">\n              {\" \"}\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.filterAuthors}\n              >\n                Filter Authors {\" \"}\n              </button>{\" \"}\n              <div className=\"col-sm mt-3\">\n                <ul className=\"list-group\">\n                  {\" \"}\n                  {[...titleAuthorMap].slice(0, 20).map(hit => (\n                    <li className=\"hoverHighlight list-group-item\" key={hit}>\n                      {hit[0]} {hit[1]}\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={e => this.onDeleteCoAuthor(hit[0])}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </li>\n                  ))}{\" \"}\n                </ul>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n            <div className=\"col-sm\">\n              <button\n                className=\"btn btn-dark center-block\"\n                onClick={this.createCoAuthorSet}\n              >\n                Find Co-Authors{\" \"}\n              </button>{\" \"}\n              <br />\n              <div className=\"col-sm mt-3\">\n                <ul className=\"list-group\">\n                  {\" \"}\n                  {[...coAuthorMap].slice(0, 20).map(hit => (\n                    <li className=\"hoverHighlight list-group-item\" key={hit}>\n                      {hit[0]} {hit[1]}\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={e => this.onDeleteCoAuthor(hit[0])}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </li>\n                  ))}{\" \"}\n                </ul>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          \n        </div>{\" \"}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"reactContainer\"));\n"],"sourceRoot":""}